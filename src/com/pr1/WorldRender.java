package com.pr1;

import com.pr1.creatures.Herbivore;
import com.pr1.creatures.Predator;
//–ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –∫–∞–∂–¥—É—é –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É (–¥–µ–ª–∞—Ç—å –≤—Å–µ –≤ –æ–¥–Ω–æ–º —Ñ—Ä–µ–π–º–µ)
public class WorldRender {
    public static final String RESET_COLOR = "\u001b[0m"; //reset color
    public static final String GROUND_COLOR = "\033[40m"; //black grey  "\u001b[47m"
    public static final String TREE_COLOR = "\u001b[32m"; //green
    public static final String ROCK_COLOR = "\033[1;90m"; //black or gray \033[0;90m "\u001b[30m"
    public static final String PREDATOR_COLOR = "\u001B[31m"; //red
    public static final String HERBIVORE_COLOR = "\u001B[93m";  //yellow
    public static final String GRASS_COLOR = "\033[1;34m"; //blue



    public static final String GRASS_ICON = "\uD83C\uDF30"; //üçÄ
    public static final String TREE_ICON = "\uD83C\uDF33"; //üå≥
    public static final String ROCK_ICON = "\uD83D\uDDFB"; //üóª
    public static final String PREDATOR_ICON = "\uD83D\uDC06"; //üêÜ
    public static final String HERBIVORE_ICON = "\uD83D\uDC16"; //üêñ



    public void render(Island island){
        for (int x = 1; x <= island.size; x++) {
            String currentLine = "";

            for (int y = 1; y <= island.size ; y++) {
                Coordinates coordinates = new Coordinates(x, y);

                if (island.isSquareEmpty(coordinates)){
                    currentLine += getColorForSquare(coordinates); //–¥–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–µ –∑–∞–∫—Ä–∞—à–µ–Ω–æ–µ –ø–æ–ª–µ
                }else{
                    currentLine += getEntitySprite(island.getEntity(coordinates));
                }

            }
            currentLine += RESET_COLOR;
            System.out.println(currentLine);

        }
    }

    //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∫–æ–Ω–∫–∏ –ø–æ–¥ –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç
    private String selectIconForEntity(Entity entity) {
        if(entity instanceof Tree) {
            return "\u001B[1m" + TREE_COLOR + TREE_ICON; //tree
        } else if(entity instanceof Rock) {
            return "\u001B[1m" + ROCK_COLOR + ROCK_ICON; //rock
        } else if(entity instanceof Herbivore) {
            return HERBIVORE_COLOR + HERBIVORE_ICON ; //pig
        } else if(entity instanceof Predator) {
            return PREDATOR_COLOR + PREDATOR_ICON; //tiger
        } else if(entity instanceof Grass) {
            return GRASS_COLOR + GRASS_ICON; //grass
        }
        return "UFO";
    }

    //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ø—Ä–∞–π—Ç–∞ —Ä–∞—Å—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    private String getEntitySprite(Entity entity) {
        return renderMapGround(" " + selectIconForEntity(entity) + ""); //—Ñ–æ–Ω + —Å–ø—Ä–∞–π—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    }

    ////—Ñ–æ–Ω + —Å–ø—Ä–∞–π—Ç
    private String renderMapGround(String sprite) {
        String result = sprite;
        result = GROUND_COLOR + result + RESET_COLOR;
        return result;
    }

    private String getColorForSquare(Coordinates coordinates) {
        return renderMapGround(" - ");                  //–∫–ª–µ—Ç–∫–∞ –±–µ–∑ –æ–±—ä–µ–∫—Ç–∞
    }

}
